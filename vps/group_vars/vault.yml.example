
---
# Multi-Host VPS Vault Configuration
# This file contains sensitive information for multiple servers and is encrypted with ansible-vault

# =============================================================================
# HOST DEFINITIONS
# =============================================================================
vault_hosts:
  # VPS Server (Coolify)
  vps-server:
    ansible_host: "203.0.113.10"
    ansible_user: "root"
    ansible_ssh_private_key_file: "/home/test/.ssh/vps_server_key"
    auth_method: "ssh_key"
    server_role: "webserver"
    environment_name: "production"
    # ansible_become_pass: "SudoPassword123"  # Only needed if ansible_user is not root

    # Optional: Additional secrets for this host
    # api_keys: "coolify_api_key_123"
    # ssl_cert_password: "ssl_password_456"
    
  # Web Server 01
  webserver01:
    ansible_host: "123.45.67.89"
    ansible_user: "deploy"
    ansible_become_pass: "SecurePassword123"  # Used for both SSH and sudo
    auth_method: "password"
    ansible_user: "deploy"
    ansible_ssh_private_key_file: "/home/test/.ssh/deploy_key"
    auth_method: "ssh_key"
    server_role: "webserver"
    environment_name: "production"
    
  # Database Primary
  db-primary:
    ansible_host: "198.51.100.25"
    ansible_user: "db_ops"
    ansible_password: "SuperSecretDBPassword!23"
    auth_method: "password"
    server_role: "database"
    environment_name: "production"
    # Database-specific secrets
    db_root_password: "AnotherDbRootPass"
    db_backup_password: "BackupPassword789"
    
  # Application Server
  app-server:
    ansible_host: "203.0.113.50"
    ansible_user: "root"
    ansible_ssh_private_key_file: "/home/test/.ssh/app_server_key"
    auth_method: "ssh_key"
    server_role: "application"
    environment_name: "staging"

# =============================================================================
# CUSTOM FIREWALL CONFIGURATION (OPTIONAL)
# =============================================================================
# Define custom firewall ports that will be added to the default and role-specific ports
vault_custom_firewall_ports:
  - { port: 9000, proto: tcp, rule: allow, comment: "Custom monitoring port" }
  - { port: 8443, proto: tcp, rule: allow, comment: "Custom HTTPS admin panel" }
  - { port: 1234, proto: udp, rule: allow, comment: "Custom UDP service" }

# Define ports to explicitly deny (optional)
custom_firewall_deny_ports:
  - { port: 23, proto: tcp, rule: deny, comment: "Block Telnet" }
  - { port: 135, proto: tcp, rule: deny, comment: "Block RPC" }

# =============================================================================
# GLOBAL SENSITIVE CONFIGURATION
# =============================================================================
vault_global_secrets:
  backup_encryption_key: "GlobalBackupKey123"
  monitoring_api_key: "MonitoringAPIKey456"

# =============================================================================
# ENVIRONMENT-SPECIFIC SECRETS
# =============================================================================
vault_environment_secrets:
  production:
    database_url: "postgresql://prod_user:prod_pass@prod-db:5432/prod_db"
    redis_password: "prod_redis_pass_123"
    
  staging:
    database_url: "postgresql://stage_user:stage_pass@stage-db:5432/stage_db"
    redis_password: "stage_redis_pass_456"