
---
- name: Reset UFW to defaults
  ufw:
    state: reset

- name: Set UFW default policies
  ufw:
    direction: "{{ item.direction }}"
    policy: "{{ item.policy }}"
  loop:
    - { direction: 'incoming', policy: 'deny' }
    - { direction: 'outgoing', policy: 'allow' }

- name: Allow SSH from specific IPs (if configured)
  ufw:
    rule: allow
    port: "{{ ssh_port }}"
    proto: tcp
    src: "{{ item }}"
    comment: "SSH access"
  loop: "{{ allowed_ssh_ips }}"
  when: allowed_ssh_ips | length > 0

- name: Allow SSH from all IPs (if no restrictions configured)
  ufw:
    rule: allow
    port: "{{ ssh_port }}"
    proto: tcp
    comment: "SSH access (all IPs)"
  when: allowed_ssh_ips | length == 0

- name: Allow Coolify ports (if enabled)
  ufw:
    rule: allow
    port: "{{ item.port }}"
    proto: "{{ item.proto }}"
    comment: "{{ item.comment }}"
  loop: "{{ coolify_ports }}"
  when: enable_coolify_ports

- name: Allow HTTP (port 80) from GitHub webhook IPs (if custom firewall enabled)
  ufw:
    rule: allow
    port: '80'
    proto: tcp
    src: "{{ item }}"
    comment: "GitHub webhook HTTP"
  loop: "{{ github_webhook_ips }}"
  when: enable_custom_firewall and not enable_coolify_ports

- name: Allow HTTPS (port 443) from GitHub webhook IPs (if custom firewall enabled)
  ufw:
    rule: allow
    port: '443'
    proto: tcp
    src: "{{ item }}"
    comment: "GitHub webhook HTTPS"
  loop: "{{ github_webhook_ips }}"
  when: enable_custom_firewall and not enable_coolify_ports

- name: Enable UFW
  ufw:
    state: enabled

- name: Configure UFW for Docker (if available)
  shell: |
    if command -v ufw-docker >/dev/null 2>&1; then
      ufw-docker install
      ufw reload
    fi
  ignore_errors: yes

- name: Display UFW status
  command: ufw status verbose
  register: ufw_status_output
  changed_when: false

- name: Show UFW configuration
  debug:
    msg: |
      {{ ufw_status_output.stdout_lines | join('\n') }}
